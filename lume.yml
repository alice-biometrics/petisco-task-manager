name: taskmanager

install:
  run: pip install -r requirements/dev.txt -r requirements/test.txt -r requirements/requirements.txt

steps:
  clean:
    run:
    - rm -rf deps
    - rm -rf output
    - rm -rf docs/build
    - find . | grep -E "(__pycache__|\.pyc|\.pyo$)" | xargs rm -rf
  lint:
    run:
    - black .
    - flake8 taskmanager
  test:
    run: pytest
  run-local:
    envs_file: env.local.sqlite.yml
    run: python -m taskmanager
  test-local:
    run: pytest -c pytest.end2end.ini -m end2end --variables tests/end2end/envs/local.yml
  docker-rebuild:
    run: docker-compose build --pull --force-rm --no-cache
  test-e2e-local-python:
    envs:
      END2END_TEST: "True"
    envs_file: env.local.sqlite.yml
    setup_detach:
      log_filename: taskmanager.log
      run: python -m taskmanager
    wait_http_200: http://0.0.0.0:8080/taskmanager/healthcheck
    run: pytest -c pytest.end2end.ini -m end2end --variables tests/end2end/envs/local.yml
    teardown:
      - echo ${SQL_DATABASE}
      - rm ${SQL_DATABASE}
  test-e2e-local:
    envs:
      END2END_TEST: True
    envs_file: env.local.mysql.yml
    setup: docker-compose up -d
    wait_http_200: http://0.0.0.0:8080/taskmanager/healthcheck
    run: pytest -c pytest.end2end.ini -m end2end --variables tests/end2end/envs/local.yml
    teardown:
      - docker-compose down
      - docker-compose ps
  test-e2e-staging:
    envs:
      END2END_TEST: True
    run:
      - pytest -m end2end --variables tests/end2end/envs/staging.yml
  test-e2e-pro:
    envs:
      END2END_TEST: True
    run:
      - pytest -m end2end --variables tests/end2end/envs/pro.yml
