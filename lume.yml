name: taskmanager

install:
  run: pip install -U -r requirements/dev.txt -r requirements/test.txt -r requirements/requirements.txt

settings:
  show_exit_code: True

steps:
  clean:
    run:
    - rm -rf deps
    - rm -rf output
    - rm -rf docs/build
    - find . | grep -E "(__pycache__|\.pyc|\.pyo$)" | xargs rm -rf
  lint:
    run:
    - black .
    - flake8 taskmanager
  test:
    run: pytest
  test-with-rabbitmq:
    envs:
      LUME_WAIT_HTTP_200_NUM_MAX_ATTEMPTS: 30
    setup: docker run -d --rm --name petisco-rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:3-management
    wait_http_200: http://localhost:15672
    run: pytest
    teardown: docker stop petisco-rabbitmq
  docker-rebuild:
    run: docker-compose build --pull --force-rm --no-cache
  up-deps:
    run: docker-compose -f docker-compose.deps.yml up -d
  run-local:
    envs_file: env.local.mysql.yml
    run: python -m taskmanager
  run-local-python:
    envs_file: env.local.sqlite.yml
    run: python -m taskmanager
  test-local:
    envs:
      END2END_TEST: "True"
    run: pytest -c pytest.end2end.ini -m end2end --variables tests/end2end/envs/local.yml
  test-e2e-local-python:
    envs:
      END2END_TEST: "True"
      LOCAL_LOG: taskmanager.local.log
    envs_file: env.local.sqlite.yml
    setup_detach:
      log_filename: taskmanager.log
      run: python -m taskmanager > ${LOCAL_LOG}
    wait_http_200: http://0.0.0.0:8080/taskmanager/healthcheck
    run: pytest -c pytest.end2end.ini --variables tests/end2end/envs/local.yml
    teardown:
      - echo ${LOCAL_LOG}
      - echo ${SQL_DATABASE}
      #- rm ${SQL_DATABASE}
  test-e2e-local:
    envs:
      END2END_TEST: True
      LUME_WAIT_HTTP_200_NUM_MAX_ATTEMPTS: 60
    envs_file: env.local.mysql.yml
    setup:
      - rm -rf .compose
      - mkdir -p .compose
      - docker-compose up --b -d --remove-orphans
    wait_http_200: http://localhost:8080/taskmanager/healthcheck
    run: pytest -c pytest.end2end.ini --variables tests/end2end/envs/local.yml
    teardown:
      - docker-compose logs taskmanager > taskmanager.docker.compose.log
      - docker-compose down -v
      - rm -rf .compose
      - docker-compose ps
  test-e2e-staging:
    envs:
      END2END_TEST: True
    run:
      - pytest -c pytest.end2end.ini --variables tests/end2end/envs/staging.yml
  test-e2e-pro:
    envs:
      END2END_TEST: True
    run:
      - pytest -c pytest.end2end.ini --variables tests/end2end/envs/pro.yml
  down-deps:
    run: docker-compose -f docker-compose.deps.yml down



